/* BorderContainer

Splitters and gutters separate panes within a BorderContainer. Splitters can be moved up and down (horizonal splitters) or left and right (vertical splitters), while Gutters are static. A "thumb" is the slit on a Splitter that indicates it is movable.

Styling the BorderContainer widget consists of the following:

.dijitBorderContainer - for border and padding of the entire border container

.dijitSplitContainer-child, .dijitBorderContainer-child - for border or child panes of the border container. By default borders are put on all children of BorderContainer.

.dijitBorderContainer-dijitTabContainerTop,
.dijitBorderContainer-dijitTabContainerBottom,
.dijitBorderContainer-dijitTabContainerLeft,
.dijitBorderContainer-dijitTabContainerRight,
.dijitBorderContainer-dijitAccordionContainer   -for border of the border containers within TabContainer or AccordionContainer widget

.dijitBorderContainer-dijitBorderContainer - for border and padding of nested BorderContainers

Splitters and gutters:

.dijitSplitterH, .dijitGutterH - for height, background, and border of a horizontal splitter and gutter
.dijitSplitterH .dijitSplitterThumb - for color, height/width of the thumb on a horizontal splitter
.dijitSplitterV, .dijitGutterV - - for height, background, and border of a vertical splitter and gutter
.dijitSplitterV .dijitSplitterThumb - for color, height/width of the thumb on a vertical splitter
.dijitSplitterHHover - for background-color of a hovered horizontal splitter
.dijitSplitterHHover .dijitSplitterThumb - for background-color of a hovered thumb on a horizontal splitter
.dijitSplitterVHover  - for background-color of a hovered vertical splitter
.dijitSplitterVHover .dijitSplitterThumb - for background-color of a hovered thumb on a vertical splitter
.dijitSplitterHActive - for background-color of an active horizontal splitter
.dijitSplitterVActive - for background-color of an active horizontal splitter
*/
.dijitBorderContainer {
    /* matches the width of the splitters between panes */
    padding: 0!important;
    background-color: transparent;
    border-radius: 0;
}

.dijitSplitContainer-child,
.dijitBorderContainer-child {
    /* By default put borders on all children of BorderContainer,
     *  to give illusion of borders on the splitters themselves.
     */
    border: none;
    //padding-right: 3px!important;
    //padding-left: 2px!important;
}

.dijitBorderContainer-dijitTabContainerTop,
.dijitBorderContainer-dijitTabContainerBottom,
.dijitBorderContainer-dijitTabContainerLeft,
.dijitBorderContainer-dijitTabContainerRight,
.dijitBorderContainer-dijitAccordionContainer {
    /* except that TabContainer defines borders on it's sub-nodes (tablist and dijitTabPaneWrapper),
     * so override rule setting border on domNode
     */
     border: none;

}
.dijitBorderContainer-dijitBorderContainer {
    /* make nested BorderContainers look like a single big widget with lots of splitters */
    border: 0;
    padding: 0;
}

/* Splitters and gutters */

.dijitSplitterH,
.dijitGutterH {
    background:@gutter-area-background;
    height:6px;
}
.dj_ios .dijitSplitterH, .dj_android .dijitSplitterH {
  height: 11px;
}

.dijitSplitterH .dijitSplitterThumb {
    background:transparent;
    height:1px;
    top:2px;
    width:19px;
}
.dj_ios .dijitSplitterH .dijitSplitterThumb, .dj_android .dijitSplitterH .dijitSplitterThumb{
  top:5px;
}
.dijitSplitterV,
.dijitGutterV {
    background:@gutter-area-background;
    border:0;
    width:8px;
    margin: 0;
}
.dj_ios .dijitSplitterV, .dj_android .dijitSplitterV {
  width: 11px;
}

.dijitSplitterV .dijitSplitterThumb {
  //background: #b5bcc7 none;
  left: 3px;
  width: 3px;
 /* background-image: -webkit-linear-gradient(left, #949ca3 1px, #a8afb7 2px, #c9cfd5 3px);
  background-image: -moz-linear-gradient(left, #949ca3 1px, #a8afb7 2px, #c9cfd5 3px);
  background-image: -o-linear-gradient(left, #949ca3 1px, #a8afb7 2px, #c9cfd5 3px);
  background-image: linear-gradient(to right, #949ca3 1px, #a8afb7 2px, #c9cfd5 3px);*/
  //border-radius: 3px;
  top: 3px;
  //height: calc(100% - 6px);
  height: 99%;
  //opacity: 0.7;
}
.dj_ios .dijitSplitterV .dijitSplitterThumb, .dj_android .dijitSplitterV .dijitSplitterThumb{
  left:5px;
}

/* hovered splitter */
.dijitSplitterHHover,
.dijitSplitterVHover {
    font-size: 1px;
    //background-color: @splitter-hovered-background-color;
}

.dijitSplitterHHover {
    //.alpha-white-gradient (left, 1,0px,  0,50%, 1,100%);
}

.dijitSplitterVHover {
    //.alpha-white-gradient (top, 1,0px,  0,50%, 1,100%);
}

.dijitSplitterHHover .dijitSplitterThumb,
.dijitSplitterVHover .dijitSplitterThumb {
    //background:@hovered-border-color none;
}


/* active splitter */
.dijitSplitterHActive,
.dijitSplitterVActive {
    font-size: 1px;
    background-color:@splitter-dragged-background-color;
    background-image: none;		// color all the way across, not gradient like in hover mode
}
