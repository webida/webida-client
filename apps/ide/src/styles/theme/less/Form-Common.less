/* wsdk/form/Common.css */

/*========================= common css =========================*/

.dijitTextBox,
.dijitInputInner {
    // .dijitInputInner selector needed for ValidationTextBox on IE6 because <input> doesn't inherit
    // the color setting from the ancestor div.dijitTextBox
    color: @text-color;
}

.dijitValidationTextBoxError .dijitValidationContainer {
    background-color: @erroricon-background-color;
    background-image: url("@{image-form-error}");
    background-position: top center;
    border: solid @erroricon-background-color 0;
    width: 9px;
}

.dijitTextBoxError .dijitValidationContainer {
    border-left-width: 1px;
}

.dijitValidationTextBoxError .dijitValidationIcon {
    width: 0;
    background-color: transparent; /* so the INPUT doesn't obscure the border in rtl+a11y */
}

/* Padding for the input area of TextBox based widgets, and corresponding padding for the
 * down arrow button and the placeholder.   placeholder is explicitly listed  because
 * dijitPlaceHolder is absolutely positioned, so padding set on dijitInputField
 * won't affect it
 */
.dijitTextArea,
.dijitInputField .dijitPlaceHolder {
    padding: @textbox-padding;
}

.dijitSelect .dijitInputField,
.dijitTextBox .dijitInputField {
    padding: @textbox-padding - 1px  @textbox-padding;
}

.dj_gecko .dijitTextBox .dijitInputInner,
.dj_webkit .dijitTextBox .dijitInputInner {
    // Although we are theoretically only adding 1px to top/bottom, some browsers seem to pad inputs by 1px on left/right,
    // so compensate for that too.
    padding: @textbox-padding - 1px;
}

.dijitSelect,
.dijitSelect .dijitButtonContents,
.dijitTextBox,
.dijitTextBox .dijitButtonNode {
    /* color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner */
    border-color: rgba(109,120,134,1);
    .transition-property(background-color, border);
    .transition-duration(.35s);
  border-radius: 0px;
}
.dijitSelect .dijitButtonContents {
  border-top-right-radius: 0px;
  border-bottom-right-radius: 0px;
}
.dijitSelect,
.dijitTextBox {
    background-color: rgba(230,233,237,1);
}

/* hover */
.dijitSelectHover,
.dijitSelectHover .dijitButtonContents,
.dijitTextBoxHover,
.dijitTextBoxHover .dijitButtonNode {
    border-color: @hovered-border-color;
    .transition-duration(.25s);
}

.dijitTextBoxHover {
    background-color: @textbox-hovered-background-color;
    .textbox-background-image;
}

/* error state */
.dijitSelectError,
.dijitSelectError .dijitButtonContents,
.dijitTextBoxError,
.dijitTextBoxError .dijitButtonNode {
    border-color: @error-border-color;
}

/* focused state */
.dijitSelectFocused,
.dijitSelectFocused .dijitButtonContents,
.dijitTextBoxFocused,
.dijitTextBoxFocused .dijitButtonNode {
    border-color:@focused-border-color;
    .transition-duration(.1s);
}

.dijitTextBoxFocused {
    background-color: @textbox-focused-background-color;
    .textbox-background-image;
}
.dijitTextBoxFocused .dijitInputContainer {
    background: @textbox-focused-background-color;
}

.dijitSelectErrorFocused,
.dijitSelectErrorFocused .dijitButtonContents,
.dijitTextBoxErrorFocused,
.dijitTextBoxErrorFocused .dijitButtonNode {
    border-color: @error-focused-border-color;
}

/* disabled state */
.dijitSelectDisabled,
.dijitSelectDisabled .dijitButtonContents,
.dijitTextBoxDisabled,
.dijitTextBoxDisabled .dijitButtonNode {
    border-color: @disabled-border-color;
}

.dijitSelectDisabled,
.dijitTextBoxDisabled,
.dijitTextBoxDisabled .dijitInputContainer {
    background-color: @textbox-disabled-background-color;
    background-image: none;
}

.dijitSelectDisabled,
.dijitTextBoxDisabled,
.dijitTextBoxDisabled .dijitInputInner {
    color: @disabled-text-color;
}

.dj_webkit .dijitDisabled input {
    /* because WebKit lightens disabled input/textarea no matter what color you specify */
    color: darken(@disabled-text-color, 5%)
}

.dj_webkit textarea.dijitTextAreaDisabled {
    /* because WebKit lightens disabled input/textarea no matter what color you specify */
    color: darken(@disabled-text-color, 40%)
}

/*========================= for special widgets =========================*/

/* Input boxes with an arrow (for a drop down) */

.dijitSelect .dijitArrowButtonInner,
.dijitComboBox .dijitArrowButtonInner {
    background-image: @toolbar_arrow;
    background-position:0 0;
    background-color: transparent;
    background-repeat: no-repeat;
    margin: 0;
    width:8px;
    border-radius: 0;
    border-color: rgba(109,120,134,1);
}

.dijitComboBox .dijitArrowButtonInner {
    //border: 1px solid rgba(109,120,134,1);	// white gutter around the arrow button
}

.dijitToolbar .dijitComboBox .dijitArrowButtonInner {
    border: none;
}

.dijitToolbar .dijitComboBox .dijitArrowButtonInner {
    border: none;
}

/* Add 1px vertical padding to the <input> where user types and the validation icon,
   to match the 1px border on arrow button */
.dijitSelectLabel,
.dijitTextBox .dijitInputInner,
.dijitValidationTextBox .dijitValidationContainer {
    padding: 1px 0;
}

.dijitComboBox .dijitButtonNode {
    padding: 0 3px;
    background-color: #6d7886;
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
}

/* Arrow "hover" effect:
 * The arrow button should change color whenever the mouse is in a position such that clicking it
 * will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
 * button, depending on the openOnClick setting for the widget.
 */
.dijitComboBoxOpenOnClickHover .dijitButtonNode,
.dijitComboBox .dijitDownArrowButtonHover,
.dijitComboBoxFocused .dijitArrowButton {
    background-color:@arrowbutton-hovered-background-color;
    padding: 1px 4px;
}
.dijitComboBoxFocused .dijitArrowButton input{
  background-position:-24px 0;
  border: 0;
}

.dijitComboBoxOpenOnClickHover .dijitArrowButtonInner,
.dijitComboBox .dijitDownArrowButtonHover .dijitArrowButtonInner {
    background-position:-24px 0;
    border: 0;
}

/* Arrow Button change when drop down is open */
.dijitComboBox .dijitHasDropDownOpen {	// .dijitHasDropDown is on dijitArrowButton node
    background-color: @pressed-background-color;
    .active-gradient("../");
    padding: 1px;		// Since no border on arrow button (see rule below)
}

.dj_iequirks .dijitComboBox .dijitHasDropDownOpen {
    padding: 1px 0;
}

.dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
    background-position:-70px 53%;
    border: 0 none;
}

/* disabled state */
div.dijitComboBoxDisabled .dijitArrowButtonInner {
    /* specific selector set to override background-position setting from Button.js
     * (.dijitComboBoxDisabled .dijitArrowButtonInner) */
    background-position:0 50%;
    background-color:transparent;
}
/*========================= hacks for browsers =========================*/
/* it seems the input[type="hidden"] has a height (16px) too... this may cause the widget's height calculate error */
.dj_ff3 .webida .dijitInputField input[type="hidden"] {
	display: none;
	height: 0;
	width: 0;
}

.dj_borderbox .webida .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
	width:18px;				// quirks mode means border-box sizing, so 18px with the border (same as 16px without border)
}

.dj_borderbox .webida .dijitComboBoxFocused .dijitHasDropDownOpen .dijitArrowButtonInner {
	width:16px;				// when no border, then back to 16px just like content-box sizing
}
