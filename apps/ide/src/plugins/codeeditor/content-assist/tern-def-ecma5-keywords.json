{
  "!name": "ecma5-keywords",
  "break": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/break",
    "!doc": "Terminates the current loop, switch, or label statement and transfers program control to the statement following the terminated statement."
  },
  "case": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/case",
    "!doc": "Evaluates an expression, matching the expression's value to a case label, and executes statements associated with that case."
  },
  "catch": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/catch",
    "!doc": "Marks a block of statements to try, and specifies a response, should an exception be thrown."
  },
  "continue": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/continue",
    "!doc": "Terminates execution of the statements in the current iteration of the current or labelled loop, and continues execution of the loop with the next iteration."
  },
  "debugger": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/debugger",
    "!doc": "Invokes any available debugging functionality. If no debugging functionality is available, this statement has no effect."
  },
  "default": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/default",
    "!doc": "Evaluates an expression, matching the expression's value to a case label, and executes statements associated with that case."
  },
  "delete": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/delete",
    "!doc": "The delete operator removes a property from an object."
  },
  "do": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/do",
    "!doc": "Creates a loop that executes a specified statement until the test condition evaluates to false. The condition is evaluated after executing the statement, resulting in the specified statement executing at least once."
  },
  "else": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/else",
    "!doc": "Executes a statement if a specified condition is true. If the condition is false, another statement can be executed."
  },
  "finally": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/finally",
    "!doc": "Marks a block of statements to try, and specifies a response, should an exception be thrown."
  },
  "for": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/for",
    "!doc": "Creates a loop that consists of three optional expressions, enclosed in parentheses and separated by semicolons, followed by a statement executed in the loop."
  },
  "function": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/function",
    "!doc": "Declares a function with the specified parameters."
  },
  "if": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/if",
    "!doc": "Executes a statement if a specified condition is true. If the condition is false, another statement can be executed."
  },
  "in": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/in",
    "!doc": "Iterates over the enumerable properties of an object, in arbitrary order. For each distinct property, statements can be executed."
  },
  "instanceof": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/instanceof",
    "!doc": "The instanceof operator tests whether an object has in its prototype chain the prototype property of a constructor."
  },
  "new": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/new",
    "!doc": "The new operator creates an instance of a user-defined object type or of one of the built-in object types that has a constructor function."
  },
  "return": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/return",
    "!doc": "Specifies the value to be returned by a function."
  },
  "switch": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/switch",
    "!doc": "Evaluates an expression, matching the expression's value to a case label, and executes statements associated with that case."
  },
  "this": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/this",
    "!doc": "A function's this keyword behaves a little differently in JavaScript compared to other languages. It also has some differences between strict mode and non-strict mode."
  },
  "throw": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/throw",
    "!doc": "Throws a user-defined exception."
  },
  "try": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/try",
    "!doc": "Marks a block of statements to try, and specifies a response, should an exception be thrown."
  },
  "typeof": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/typeof",
    "!doc": "The typeof operator returns a string indicating the type of the unevaluated operand."
  },
  "var": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/var",
    "!doc": "Declares a variable, optionally initializing it to a value."
  },
  "void": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/void",
    "!doc": "The void operator evaluates the given expression and then returns undefined."
  },
  "while": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/while",
    "!doc": "Creates a loop that executes a specified statement as long as the test condition evaluates to true. The condition is evaluated before executing the statement."
  },
  "with": {
    "!type": "?",
    "!url": "https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/with",
    "!doc": "Extends the scope chain for a statement."
  }
}
